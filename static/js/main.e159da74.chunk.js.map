{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/FilterStatus.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onSelectedChange","className","map","todo","classNames","id","completed","title","type","onClick","event","preventDefault","handleSelectTodo","TodoFilter","filterStatus","onFilterChange","query","onQueryChange","value","onChange","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterStatus","TodoModal","onClose","useState","user","setUser","useEffect","userId","href","email","name","App","ALL","setFilterStatus","setQuery","setSelectedTodo","isLoading","setIsLoading","setTodos","finally","visibleTodos","useMemo","preparedTodos","ACTIVE","filter","COMPLETED","normalizedQuery","trim","toLowerCase","includes","getFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e159da74.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  onSelectedChange: (todo: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelectedChange,\n}) => {\n  const handleSelectTodo = (event: React.MouseEvent, todo: Todo) => {\n    event.preventDefault();\n    onSelectedChange(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': todo.id === selectedTodo?.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={event => handleSelectTodo(event, todo)}\n              >\n                <span className=\"icon\">\n                  <i className={(classNames({\n                    'far fa-eye-slash': todo.id === selectedTodo?.id,\n                    'far fa-eye': todo.id !== selectedTodo?.id,\n                  }))}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { FilterStatus } from '../../types/FilterStatus';\n\ntype Props = {\n  filterStatus: FilterStatus;\n  onFilterChange: (filterStatus: FilterStatus) => void,\n  query: string,\n  onQueryChange: (query: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterStatus,\n  onFilterChange,\n  query,\n  onQueryChange,\n}) => {\n  const handleFilterChange = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    onFilterChange(event.target.value as FilterStatus);\n  };\n\n  const handleQueryChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    onQueryChange(event.target.value);\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterStatus}\n            onChange={handleFilterChange}\n\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onQueryChange('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterStatus {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  onClose: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onClose,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (selectedTodo !== null) {\n      getUser(selectedTodo?.userId).then(setUser);\n    }\n  }, [selectedTodo]);\n\n  const handleCloseModal = () => {\n    onClose(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { FilterStatus } from './types/FilterStatus';\nimport { getTodos } from './api';\n\nfunction getFilteredTodos(\n  todos: Todo[],\n  filterStatus: FilterStatus,\n  query: string,\n) {\n  let preparedTodos: Todo[];\n\n  switch (filterStatus) {\n    case FilterStatus.ACTIVE:\n      preparedTodos = todos.filter(todo => !todo.completed);\n      break;\n\n    case FilterStatus.COMPLETED:\n      preparedTodos = todos.filter(todo => todo.completed);\n      break;\n\n    case FilterStatus.ALL:\n    default:\n      preparedTodos = todos;\n  }\n\n  const normalizedQuery = query.trim().toLowerCase();\n\n  if (query) {\n    preparedTodos = preparedTodos.filter((todo) => {\n      const normalizedTitle = todo.title.trim().toLowerCase();\n\n      return normalizedTitle.includes(normalizedQuery);\n    });\n  }\n\n  return preparedTodos;\n}\n\nexport const App: React.FC = () => {\n  const [filterStatus, setFilterStatus] = useState(FilterStatus.ALL);\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [todos, setTodos] = useState([] as Todo[]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const visibleTodos = useMemo(() => (\n    getFilteredTodos(todos, filterStatus, query)\n  ), [todos, filterStatus, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={setQuery}\n                filterStatus={filterStatus}\n                onFilterChange={setFilterStatus}\n\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    onSelectedChange={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onClose={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}